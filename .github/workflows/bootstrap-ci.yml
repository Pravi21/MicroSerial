name: Bootstrap CI

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  bootstrap:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    env:
      CARGO_TERM_COLOR: always
      MICROSERIAL_CACHE_DIR: ${{ runner.temp }}/microserial-cache
    steps:
      - uses: actions/checkout@v4

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            gui/target
            build/core
          key: bootstrap-${{ runner.os }}-${{ hashFiles('**/Cargo.lock', '**/CMakeLists.txt') }}
          restore-keys: |
            bootstrap-${{ runner.os }}-

      - name: Preflight audit (Linux)
        if: runner.os == 'Linux'
        shell: bash
        run: ./scripts/linux/bootstrap.sh --audit-only --verbose

      - name: Preflight audit (macOS)
        if: runner.os == 'macOS'
        shell: bash
        run: ./scripts/macos/bootstrap.sh --audit-only --verbose

      - name: Preflight audit (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force
          ./scripts/windows/bootstrap.ps1 --audit-only --verbose

      - name: Bootstrap & build (Linux)
        if: runner.os == 'Linux'
        shell: bash
        run: ./scripts/linux/bootstrap.sh --verbose

      - name: Bootstrap & build (macOS)
        if: runner.os == 'macOS'
        shell: bash
        run: ./scripts/macos/bootstrap.sh --verbose

      - name: Bootstrap & build (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force
          ./scripts/windows/bootstrap.ps1 --verbose

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: microserial-${{ matrix.os }}
          path: |
            build/core/**/*microserial_core.*
            gui/target/release/microserial_gui*
          if-no-files-found: warn
